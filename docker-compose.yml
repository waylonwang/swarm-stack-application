# Update Time: 2023-11-19 23:50
version: "3.4"

services:
  # NocoBase
  nocobase:
    image: nocobase/nocobase:main
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      DB_LOGGING: ${DB_LOGGING}       
      DB_DIALECT: ${DB_DIALECT}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
      LOCAL_STORAGE_BASE_URL: ${LOCAL_STORAGE_BASE_URL}
      TZ: ${TZ}
    volumes:
      - nfs_nocobase:/app/nocobase/storage
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocobase.rule=Host(`nocobase.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.nocobase.entrypoints=websecure"
        - "traefik.http.routers.nocobase.service=nocobase"
        - "traefik.http.routers.nocobase.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.nocobase.loadbalancer.server.port=80"
        - homepage.group=Application
        - homepage.name=云谷之家
        - homepage.icon=https://www.waylon.wang:4/images/services/nocobase.png
        - homepage.href=https://nocobase.${DOMAIN_SWARM}:4/
        - homepage.description=NocoBase低代码系统
        - homepage.siteMonitor=http://nocobase
        - homepage.weight=1
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # Transmission
  transmission:
    image: chisbread/transmission:latest
    networks: [network_cluster]
    restart: on-failure  
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: ${TR_PUID}
      PGID: ${TR_PGID}
      USERNAME: ${TR_USERNAME}       
      PASSWORD: ${TR_PASSWORD}
      TZ: ${TZ}
    volumes:
      - nfs_transmission_config:/config
      - nfs_transmission_main_downloads:/media
      - nfs_transmission_ext_downloads:/media_ext
      - nfs_transmission_watch:/watch
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.transmission.rule=Host(`pt.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.transmission.entrypoints=websecure"
        - "traefik.http.routers.transmission.service=transmission"
        - "traefik.http.routers.transmission.middlewares=noauth-chain@file"
        - "traefik.http.services.transmission.loadbalancer.server.port=9091"
        # - "traefik.tcp.routers.torrent.rule=HostSNI(`*`)"
        # - "traefik.tcp.routers.torrent.entrypoints=torrent"
        # - "traefik.tcp.routers.torrent.service=torrent"
        # - "traefik.tcp.services.torrent.loadbalancer.server.port=51413"   
        - homepage.group=Application
        - homepage.name=Transmission
        - homepage.icon=transmission.png
        - homepage.href=https://pt.${DOMAIN_SWARM}:4/
        - homepage.description=PT下载器
        - homepage.ping=http://transmission:9091
        - homepage.weight=2        
        - homepage.widget.type=transmission
        - homepage.widget.url=https://pt.${DOMAIN_SWARM}:4    
        - homepage.widget.username=${TR_USERNAME}
        - homepage.widget.password=${TR_PASSWORD}
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # BaiduPCS
  baidupcs:
    image: oldiy/baidupcs:latest
    networks: [network_cluster]
    restart: on-failure  
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: ${TR_PUID}
      PGID: ${TR_PGID}
      TZ: ${TZ}    
    volumes:
      - nfs_baidupcs_config:/root/.config/BaiduPCS-Go
      - nfs_baidupcs_client:/opt/BaiduPCS
      - nfs_baidupcs_download:/root/Downloads
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.baidupcs.rule=Host(`baidupcs.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.baidupcs.entrypoints=websecure"
        - "traefik.http.routers.baidupcs.service=baidupcs"
        - "traefik.http.routers.baidupcs.middlewares=noauth-chain@file"
        - "traefik.http.services.baidupcs.loadbalancer.server.port=5299"
        - homepage.group=Application
        - homepage.name=BaiduPCS
        - homepage.icon=baidu.png
        - homepage.href=https://baidupcs.${DOMAIN_SWARM}:4/
        - homepage.description=百度云盘下载器
        - homepage.siteMonitor=http://baidupcs:5299
        - homepage.weight=3        
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # # Hlink
  # hlink:
  #   image: likun7981/hlink:latest
  #   networks: [network_cluster]
  #   restart: on-failure  
  #   environment:
  #     HLINK_HOME: /share/data/hlinkDocker
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - /mnt/downloads:/downloads
  #     - nfs_hlink:/share
  #   deploy:
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.hlink.rule=Host(`hlink.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.hlink.entrypoints=websecure"
  #       - "traefik.http.routers.hlink.service=hlink"
  #       - "traefik.http.routers.hlink.middlewares=noauth-chain@file"
  #       - "traefik.http.services.hlink.loadbalancer.server.port=9090"          
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.download == true

  # # NAS-Tools
  # nas-tools:
  #   image: shmilyin/nas-tools:2.9.1
  #   networks: [network_cluster]
  #   restart: on-failure  
  #   environment:
  #     PUID: 0    # 想切换为哪个用户来运行程序，该用户的uid
  #     PGID: 0    # 想切换为哪个用户来运行程序，该用户的gid
  #     UMASK: 000 # 掩码权限，默认000，可以考虑设置为022
  #     NASTOOL_AUTO_UPDATE: "false"  # 如需在启动容器时自动升级程程序请设置为true
  #     NASTOOL_CN_UPDATE: "false" # 如果开启了容器启动自动升级程序，并且网络不太友好时，可以设置为true，会使用国内源进行软件更新
  #     # REPO_UR: https://github.com/wangyan/nas-tools.git  # 当你访问github网络很差时，可以考虑解释本行注释
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - /mnt/downloads:/downloads
  #     - nfs_nastools_media:/media
  #     - nfs_nastools_config:/config
  #   ports:
  #     - target: 3000
  #       published: 3000
  #       protocol: tcp
  #       mode: host
  #   deploy:
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.nastools.rule=Host(`nastools.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.nastools.entrypoints=websecure"
  #       - "traefik.http.routers.nastools.service=nastools"
  #       - "traefik.http.routers.nastools.middlewares=noauth-chain@file"
  #       - "traefik.http.services.nastools.loadbalancer.server.port=3000"          
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.download == true

  # XiaoaiGPT
  # xiaogpt1:
  #   image: yihong0618/xiaogpt
  #   command: --config=/config/config.json
  #   networks: [network_cluster]
  #   restart: on-failure
  #   environment:
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - nfs_xiaogpt_config1:/config
  #     - nfs_xiaogpt_src:/app/xiaogpt 
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true
  # xiaogpt2:
  #   image: yihong0618/xiaogpt
  #   command: --config=/config/config.json
  #   networks: [network_cluster]
  #   restart: on-failure
  #   environment:
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - nfs_xiaogpt_config2:/config
  #     - nfs_xiaogpt_src:/app/xiaogpt
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true
  # xiaogpt3:
  #   image: yihong0618/xiaogpt
  #   command: --config=/config/config.json
  #   networks: [network_cluster]
  #   restart: on-failure
  #   environment:
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - nfs_xiaogpt_config3:/config
  #     - nfs_xiaogpt_src:/app/xiaogpt
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true                    

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

x-common-media-main-volume: &common-media-main-volume
  type: nfs
  o: addr=${MEDIA_SERVER},rw,nfsvers=4

x-common-media-ext-volume: &common-media-ext-volume
  type: nfs
  o: addr=${MEDIA_EXT_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_nocobase:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocobase/storage
  nfs_transmission_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/transmission/config
  nfs_transmission_main_downloads:
    driver: local
    driver_opts:
      <<: *common-media-main-volume
      device: :${MEDIA_DEVICE}   
  nfs_transmission_ext_downloads:
    driver: local
    driver_opts:
      <<: *common-media-ext-volume
      device: :${MEDIA_DEVICE}       
  nfs_transmission_watch:
    driver: local
    driver_opts:
      <<: *common-media-main-volume
      device: :${MEDIA_DEVICE}/watch        
  nfs_baidupcs_client:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/baidupcs/client   
  nfs_baidupcs_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/baidupcs/config
  nfs_baidupcs_download:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${DOWNLOAD_DEVICE}/baidupcs
  # nfs_xiaogpt_src:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/ai/xiaogpt/src/xiaogpt        
  # nfs_xiaogpt_config1:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/ai/xiaogpt/config1
  # nfs_xiaogpt_config2:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/ai/xiaogpt/config2
  # nfs_xiaogpt_config3:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/ai/xiaogpt/config3         